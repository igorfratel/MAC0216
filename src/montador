#!/usr/bin/python3

"""
Lê, na entrada padrão, um programa na linguagem de montagem da máquina
virtual e retorna um programa em C que executa este programa.

Uso:
    ./montador entrada1...entradaN
"""
import sys

def parse_programs(*args):
    out = open("programas.c",'w')
    out.write("//Arquivo que conterá todos os programas dos robôs em jogo\n"
          "//Será gerado pelo parser em python\n"+
          "#include \"programas.h\"\n")
    file_counter = 0
    for file in args[0][1:]:
        with open(file, 'r') as f:
            l = f.readline()
            ip = 0
            firstline = True

            tabsim = {}

            out.write("INSTR prog" + str(file_counter) + "[] = {\n")
            while l:
                label = op = ""
                arg   = 0
                try:
                    l = l[:l.index('#')]
                except:
                    pass
                keys = l.split()
                if len(keys) > 0 and keys[0].endswith(":"):
                    label = keys[0][:-1]              #jogando fora o ':'
                    tabsim[label]=ip
                    keys.pop(0)
                if len(keys) > 0:
                    op = keys.pop(0)
                if len(keys) > 0:
                    arg = keys.pop(0)
                    if arg in tabsim:
                        arg = tabsim[arg]
                if (arg == "CIMA" or arg == "MOV"):
                    arg = "0"
                elif (arg == "DSUP" or arg == "REC"):
                    arg = "1"
                elif (arg == "DINF" or arg == "DEQ"):
                    arg = "2"
                elif (arg == "BAIXO" or arg == "ATQ"):
                    arg = "3"
                elif (arg == "EINF"):
                    arg = "4"
                elif (arg == "ESUP"):
                    arg = "5"
                if op != "" and firstline:
                    out.write("  {%s, %s}\n"%(op,arg))
                    firstline = False
                elif op != "":
                    out.write("  ,{%s, %s}\n"%(op,arg))
                l = f.readline()
                ip += 1
            out.write("};\n")
            file_counter += 1
    out.write( "//Database contém todos os vetores de programas\n"
            "INSTR *database[] = {\n")
    for i in range(0, file_counter):
        if(i == 0):
            out.write("  prog" + str(i))
        else:
            out.write(",\n  prog" + str(i))
    out.write(  "\n};\n"
            "INSTR *devolve_programa(int prog_num) {\n"
            "  //Recebe o número do programa e devolve o programa correspondente\n"
            "  return database[prog_num];\n}")

parse_programs(sys.argv)



# Local variables:
# mode: python
# End:
